# ========================================
# DATABASE
# ========================================


# ----------- Mode & Defaults ------------
MODE ?= dev

DATABASE_ENV_FILE   = ./config/database.$(MODE).env
DB_IMAGE_NAME       = spectroscopy-db:$(MODE)
DB_CONTAINER_NAME   = spectroscopy-db
DB_DOCKERFILE       = ./database/Dockerfile
DB_CONTEXT          = ./database
VOLUME_NAME         = spectroscopy-pgdata

# Extract credentials from env file
DB_USER := $(shell grep DB_USER $(DATABASE_ENV_FILE) | cut -d '=' -f2)
DB_NAME := $(shell grep DB_NAME $(DATABASE_ENV_FILE) | cut -d '=' -f2)
DB_PASSWORD := $(shell grep DB_PASSWORD $(DATABASE_ENV_FILE) | cut -d '=' -f2)



.PHONY: db-up db-down db-rebuild db-logs db-init db-connect db-wipe wait-for-db

db-up: ## Build and run the DB container based on current mode (MODE=dev or MODE=prod)
	docker build -t $(DB_IMAGE_NAME) -f $(DB_DOCKERFILE) $(DB_CONTEXT)
	docker run -d \
		--name $(DB_CONTAINER_NAME) \
		--env-file $(DATABASE_ENV_FILE) \
		-e POSTGRES_USER=$(DB_USER) \
		-e POSTGRES_PASSWORD=$(DB_PASSWORD) \
		-e POSTGRES_DB=$(DB_NAME) \
		-p 5432:5432 \
		-v $(VOLUME_NAME):/var/lib/postgresql/data \
		$(DB_IMAGE_NAME)

db-down: ## Stop and remove DB container
	docker stop $(DB_CONTAINER_NAME) || true
	docker rm $(DB_CONTAINER_NAME) || true

db-wipe: ## Destroy volume
	docker volume rm $(VOLUME_NAME) || true

wait-for-db: ## Wait for DB health check
	@echo "‚è≥ Waiting for PostgreSQL container to become healthy..."
	@until [ "$$(docker inspect -f '{{.State.Health.Status}}' $(DB_CONTAINER_NAME))" = "healthy" ]; do \
		sleep 1; \
	done
	@echo "‚úÖ PostgreSQL is healthy!"

db-rebuild: ## Full rebuild (drop, up, init)
	db-down db-wipe db-up wait-for-db db-init

db-logs: ## Tail logs
	docker logs -f $(DB_CONTAINER_NAME)

db-connect: ## PSQL connect
	@echo "Connecting to PostgreSQL as $(DB_USER) on $(DB_NAME)..."
	@PGPASSWORD=$(DB_PASSWORD) psql -h localhost -U $(DB_USER) -d $(DB_NAME)

db-init:
	@echo "üîß Initializing DB schema..."
	@MODE=$(MODE) python3 -c "from database.database import init_db; init_db()"
